# Interactive shell configuration

if [[ -r ~/.aliasrc ]]; then
  . ~/.aliasrc
fi

fpath=("$HOME/.local/functions" $fpath)
autoload ${fpath[1]}/*(:t)
setopt PROMPT_SUBST

zstyle ':completion:*' completer _complete _ignored _correct _approximate
zstyle ':completion:*' max-errors 2
zstyle ':completion:*' word true
zstyle :compinstall filename '/Users/russ/.zshrc'

if type brew &>/dev/null
then
  fpath+=("$(brew --prefix)/share/zsh/site-functions")
  autoload -Uz compinit
  compinit
fi

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=5000
SAVEHIST=5000
setopt EXTENDED_HISTORY      # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY    # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY         # Share history between all sessions.
setopt HIST_IGNORE_DUPS      # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS  # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_SPACE     # Do not record an event starting with a space..
setopt HIST_VERIFY           # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY        # append to history file (Default)
setopt HIST_NO_STORE         # Don't store history commands

setopt autocd beep extendedglob nomatch notify
bindkey -e
# End of lines configured by zsh-newuser-install

autoload -U select-word-style
select-word-style bash

export HELPDIR=/usr/share/zsh/5.9/help
unalias run-help
autoload -Uz run-help
alias help=run-help

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle -e ':vcs_info:git:*' \
    check-for-changes 'estyle-cfc && reply=( true ) || reply=( false )'
zstyle ':vcs_info:*' unstagedstr ' üì¨'
zstyle ':vcs_info:*' stagedstr ' üì´'
zstyle ':vcs_info:git:*' formats ' %#' '%F{117}%b%f%u%c%m'
zstyle ':vcs_info:git:*' nvcsformats ' %#'
zstyle ':vcs_info:git:*' actionformats ' %F{161}[%a]%f %#'

precmd() { vcs_info }
PROMPT='%(?.%F{green}‚óè.%F{red}‚óè%f) %F{143}%3~%f${vcs_info_msg_0_} '
RPROMPT='%(?..%F{red}%?%f) %F{178}${vcs_info_msg_1_}%f'

export PSYS_AWS_UTILS_HOME="$HOME/git/main/aws-utils"
path+=("$PSYS_AWS_UTILS_HOME/bin")

source ~/.iterm2_shell_integration.zsh

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

if [[ -d "$HOME/.local/env" ]]; then
    for env in $(echo $HOME/.local/env/*.env); do
        . $env
    done
fi
